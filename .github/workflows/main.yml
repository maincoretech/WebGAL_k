name: "publish"
on:
  workflow_dispatch:
  push:

env:
  CARGO_INCREMENTAL: 0
  RUST_BACKTRACE: short
  # RUSTFLAGS: '-D warnings -W unreachable-pub -W rust-2021-compatibility'
  RUSTFLAGS: "-W unreachable-pub -W rust-2021-compatibility"

jobs:
  publish-tauri:
    permissions: write-all
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: "macos-latest"
            args: "--target aarch64-apple-darwin"
          - platform: "macos-latest"
            args: "--target x86_64-apple-darwin"
          - platform: "macos-latest"
            args: "--target universal-apple-darwin"
          - platform: "ubuntu-24.04"
            args: ""
          - platform: "windows-latest"
            args: "--target i686-pc-windows-msvc"
          - platform: "windows-latest"
            args: "--target x86_64-pc-windows-msvc"

    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Dependencies (Ubuntu Only)
        if: matrix.platform == 'ubuntu-24.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y webkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2

      - name: Vite Build
        run: |
          bun i
          bun run build

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      # Just not need NodeJS and Yarn anymore!
      # SEE U AGAIN~
      # - name: Install yarn
      #   uses: borales/actions-yarn@v4
      #   with:
      #     cmd: install

      # - name: Setup node and cache for package data
      #   uses: actions/setup-node@v4
      #   with:
      #     node-version: "lts/*"
      #     cache: "yarn"

      - name: Cache Rust
        uses: Swatinem/rust-cache@v2

      - name: Tauri Build and Release
        uses: Muska-Ami/tauri-action@dev
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: app-v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version
          includeDebug: true
          releaseName: "[Bun]App v__VERSION__"
          releaseBody: "See the assets to download this version and install."
          releaseDraft: true
          prerelease: true
          args: ${{ matrix.args }}
